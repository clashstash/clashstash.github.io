<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashstash.github.io/news/article-54940.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具</title>
        <meta name="description" content="在项目生产中日志的记录是必不可少的，在.net项目中，要说日志组件，log4net绝对可有一席之地，随着公司业务的发展，微服务则必定无可避免。在跨服务中通过日志进行分析性能或者排查故障点，如何快速定位" />
        <link rel="icon" href="/assets/website/img/clashstash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashStash官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashstash.github.io/news/article-54940.htm" />
    <meta property="og:site_name" content="ClashStash官方节点站" />
    <meta property="og:title" content="AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具" />
    <meta property="og:image" content="https://clashstash.github.io/uploads/20240709/f541a7c9edca55fe30d6811b111c3780.webp" />
        <meta property="og:release_date" content="2025-02-11T05:44:29" />
    <meta property="og:updated_time" content="2025-02-11T05:44:29" />
        <meta property="og:description" content="在项目生产中日志的记录是必不可少的，在.net项目中，要说日志组件，log4net绝对可有一席之地，随着公司业务的发展，微服务则必定无可避免。在跨服务中通过日志进行分析性能或者排查故障点，如何快速定位" />
        
    <link rel="stylesheet" href="/assets/website/css/clashstash/maicons.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/theme.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FGG26WJLQX"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FGG26WJLQX');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light bg-white sticky" data-offset="500">
            <div class="container">
                                <a href="/" class="navbar-brand">Clash<span class="text-primary">Stash</span></a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </div>
        </nav>
        <div class="container">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-6">
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                        <h1 class="text-center">AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具</h1>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="page-section" id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <p>在项目生产中日志的记录是必不可少的，在.net项目中，要说日志组件，<code>log4net</code>绝对可有一席之地，随着公司业务的发展，微服务则必定无可避免。在跨服务中通过日志进行分析性能或者排查故障点，如何快速定位日志尤为关键。链路追踪技术的出现正是解决这些痛点的。<br /> 分布式链路追踪需要收集单次请求所经过的所有服务，而且为了知道请求细节，还需要将具体的业务日志进行串联，而这一切的基础就是要通过一个<code>traceid</code>从头传到尾，相当于将该次请求过程产生的所有日志都关联其<code>traceid</code>，事后排查问题只需要知道<code>traceid</code>,就可以在日志中拉出与之关联的所有日志。</p> <p>当然不是所有的公司都需要链路追踪，对于一些小公司，就几个单体系统，压根不需要这些。比如我们使用<code>log4net</code>时，会在日志模板中加入<code>ThreadId</code>,例如这样的模板</p> <pre><code>"%date [%thread] %-5level - %message%newline"</code></pre> <p>虽然并发高时我们多个用户的请求日志都掺杂在一起，但是我们依然可以根据<code>线程号</code>将该次请求的日志进行串联。这在大多时候都很好的解决了我们的问题。</p> </h1> <p>即使在体量不大的系统中上面的线程号很好用了，但是哪有一点不用多线程的业务场景呢，当一次请求进来后可能会开多个异步线程去执行，那上面的线程号就显得力不从心了，就是说没法一下将相干日志提取出来了。</p> <p>但是这难不倒我们，我们可以在业务开始时自定义一个随便字符串作为该次请求的唯一标识，然后将该变量通过参数传给下游方法，下游方法也将其一层一层接力传下去，在打印日志时都将该字段进行输出，这个办法很多人都用过吧。</p> </h1> <p>难道没有一种优雅的方式能将我们某次请求的过程(包括多线程)进行串联起来的唯一标识吗？<br /> 在<code>ASPNetCore</code>中其实一直有个不起眼的属性<code>HttpContext.TraceIdentifier</code>，可以说他就是框架给我们提供的<code>traceid</code>，我们可以在所需要的地方都注入<code>HttpContext</code>来获取该参数，当然不许那么麻烦，只需要给日志组件获取到该值，在任何leave的日志输出时日志组件将其输出即可，这个完全没问题，大家可以去深入研究，有些日志组件可以直接配置就可以输出该<code>TraceIdentifier</code>值到每一条日志中，也可以将其使用到跨应用调用时传递到下游服务，如http请求可以通过header携带该值，下游从header中获取并作为它自己的<code>TraceIdentifier</code>继续传递。</p> </h1> <p><code>ThreadLoacl</code>倒是熟悉，是每个线程之间隔离的，每个线程操作的都是自己线程的对象，能做到各个线程或不影响。<code>AsyncLocal</code>并不是一个新特性，只是用的场景不多，很少被使用</p> <h2 id="定义">定义</h2> <p>Represents ambient data that is local to a given asynchronous control flow, such as an asynchronous method.</p> <p>表示对于给定异步控制流（如异步方法）是本地数据的环境数据。</p> <h2 id="示例">示例</h2> <pre><code class="language-c#">using System; using System.Threading; using System.Threading.Tasks;  class Example {     static AsyncLocal&lt;string&gt; _asyncLocalString = new AsyncLocal&lt;string&gt;();      static ThreadLocal&lt;string&gt; _threadLocalString = new ThreadLocal&lt;string&gt;();      static async Task AsyncMethodA()     {         // Start multiple async method calls, with different AsyncLocal values.         // We also set ThreadLocal values, to demonstrate how the two mechanisms differ.         _asyncLocalString.Value = "Value 1";         _threadLocalString.Value = "Value 1";         var t1 = AsyncMethodB("Value 1");          _asyncLocalString.Value = "Value 2";         _threadLocalString.Value = "Value 2";         var t2 = AsyncMethodB("Value 2");          // Await both calls         await t1;         await t2;      }      static async Task AsyncMethodB(string expectedValue)     {         Console.WriteLine("Entering AsyncMethodB.");         Console.WriteLine("   Expected '{0}', AsyncLocal value is '{1}', ThreadLocal value is '{2}'",                            expectedValue, _asyncLocalString.Value, _threadLocalString.Value);         await Task.Delay(100);         Console.WriteLine("Exiting AsyncMethodB.");         Console.WriteLine("   Expected '{0}', got '{1}', ThreadLocal value is '{2}'",                            expectedValue, _asyncLocalString.Value, _threadLocalString.Value);     }      static async Task Main(string[] args)     {         await AsyncMethodA();     } } // The example displays the following output: //   Entering AsyncMethodB. //      Expected 'Value 1', AsyncLocal value is 'Value 1', ThreadLocal value is 'Value 1' //   Entering AsyncMethodB. //      Expected 'Value 2', AsyncLocal value is 'Value 2', ThreadLocal value is 'Value 2' //   Exiting AsyncMethodB. //      Expected 'Value 2', got 'Value 2', ThreadLocal value is '' //   Exiting AsyncMethodB. //      Expected 'Value 1', got 'Value 1', ThreadLocal value is ''</code></pre> <p>简单理解，就是对该变量赋值后，之影响自己个自己的子线程，即当前线程发起的其他线程，包括线程池中的线程，都能获取到该值，而子线程修改该值，对父线程来说是无影响的。而这种特性貌似就是我们寻找那种能够优雅标记出同一次请求的特性。定义一个全局变量，在每次请求的起点对该变量赋值一个随机字符串，然后本次请求涉及到的所有线程访问该值，都是我们在入口赋的值。</p> <h2 id="项目应用">项目应用</h2> <p>我们可以在任意地方定义一个全局变量，最好是放到LogHelper之中</p> <h3 id="aspnet4">AspNet4</h3> <pre><code class="language-c#">public static class LogHelper{     public static AsyncLocal&lt;string&gt; Traceid = new AsyncLocal&lt;string&gt;();     ... }</code></pre> <p>在授权过滤器中对该值进行赋值,一般授权过滤最先执行，可作为请求的入口点</p> <pre><code>LogHelper.TraceId.Value&nbsp;=&nbsp;Guid.NewGuid().ToString();</code></pre> <p>在<code>log4net</code>的LogHelper中使用,日志模板为</p> <pre><code>"%date [%property{trace}] [%thread] %-5level - %message%newline"</code></pre> <pre><code class="language-c#">public&nbsp;static&nbsp;void&nbsp;Info(object&nbsp;message) {     ThreadContext.Properties["trace"]&nbsp;=&nbsp;TraceId.Value; &nbsp;&nbsp;&nbsp;&nbsp;Loger.Info(message); } ...</code></pre> <h3 id="aspnetcore">AspNetCore</h3> <p>注册中间件进行设置值,将自己的中间件注册靠前点</p> <pre><code class="language-c#">app.Use(delegate&nbsp;(HttpContext&nbsp;ctx,&nbsp;RequestDelegate&nbsp;next) { &nbsp;&nbsp;&nbsp;&nbsp;LogHelper.TraceId.Value&nbsp;=&nbsp;ctx.TraceIdentifier; &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;next(ctx); });</code></pre> <p>经验证与预期符合，该实现方式不依赖AspnetCore框架<code>HttpContext.TraceIdentifier</code>，提供一种实现链路追踪中传递<code>TraceId</code>的一种思路，如有不正确之处欢迎指正，如果该思路对您有帮助，请点赞分享。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-54939.htm">进程通信&#8212;-共享内存以及mmap函数实现共享内存</a></p>
                                        <p>下一个：<a href="/news/article-55496.htm">pytorch 保存模型和加载模型</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-48103.htm" title="附近领养狗狗基地在哪里（附近哪里可以领养宠物）">附近领养狗狗基地在哪里（附近哪里可以领养宠物）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-share-clash-stash.htm" title="「12月18日」最高速度20.2M/S，2024年SSR/V2ray/Clash/Shadowrocket每天更新免费节点订阅链接">「12月18日」最高速度20.2M/S，2024年SSR/V2ray/Clash/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-26802.htm" title="MySQL数据库中的Date,DateTime,TimeStamp和Time类型">MySQL数据库中的Date,DateTime,TimeStamp和Time类型</a></li>
                        <li class="py-2"><a href="/news/article-39214.htm" title="Vue中引入静态资源的几种方式">Vue中引入静态资源的几种方式</a></li>
                        <li class="py-2"><a href="/news/article-53847.htm" title="编码练习：JavaScript 点击下拉列表显示相关信息">编码练习：JavaScript 点击下拉列表显示相关信息</a></li>
                        <li class="py-2"><a href="/news/article-34347.htm" title="泉州领养猫（泉州领养猫咪）">泉州领养猫（泉州领养猫咪）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-free-stash-node.htm" title="「2月12日」最高速度22.8M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接">「2月12日」最高速度22.8M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-34349.htm" title="省内寄猫咪一般多少钱（省内邮寄猫咪多少钱）">省内寄猫咪一般多少钱（省内邮寄猫咪多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-free-node-subscribe.htm" title="「1月14日」最高速度21.5M/S，2025年SSR/V2ray/Clash/Shadowrocket每天更新免费节点订阅链接">「1月14日」最高速度21.5M/S，2025年SSR/V2ray/Clash/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-25-node-share.htm" title="「12月25日」最高速度19.9M/S，2024年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接">「12月25日」最高速度19.9M/S，2024年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">42</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div> <!-- .container -->
    </div> <!-- .page-section -->
        <footer class="page-footer bg-image" style="background-image: url(/assets/website/img/clashstash/world_pattern.svg);">
        <div class="container">
            <p class="text-center" id="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <a href="/">ClashStash官方节点站</a> 版权所有
                <br />Powered by WordPress
            </p>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/clashstash/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashstash/bootstrap.bundle.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>