<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashstash.github.io/news/article-77222.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>云环境下集合隐私计算-解读</title>
        <meta name="description" content="读paper-"云环境下集合隐私计算"的笔记  基础 哥德尔编码  可以将非负整数序列（向量）与自然数建立起对应关系  具体来说，就是无穷序列\((a_1,x_2,...,x_m)\)借助素数序列\(" />
        <link rel="icon" href="/assets/website/img/clashstash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashStash官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashstash.github.io/news/article-77222.htm" />
    <meta property="og:site_name" content="ClashStash官方节点站" />
    <meta property="og:title" content="云环境下集合隐私计算-解读" />
    <meta property="og:image" content="https://clashstash.github.io/uploads/20240709/58e9d6a8707e0037bf454573c6da992d.webp" />
        <meta property="og:release_date" content="2025-03-19T09:11:28" />
    <meta property="og:updated_time" content="2025-03-19T09:11:28" />
        <meta property="og:description" content="读paper-"云环境下集合隐私计算"的笔记  基础 哥德尔编码  可以将非负整数序列（向量）与自然数建立起对应关系  具体来说，就是无穷序列\((a_1,x_2,...,x_m)\)借助素数序列\(" />
        
    <link rel="stylesheet" href="/assets/website/css/clashstash/maicons.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/theme.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="云环境下集合隐私计算-解读">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FGG26WJLQX"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FGG26WJLQX');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light bg-white sticky" data-offset="500">
            <div class="container">
                                <a href="/" class="navbar-brand">Clash<span class="text-primary">Stash</span></a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </div>
        </nav>
        <div class="container">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-6">
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                        <h1 class="text-center">云环境下集合隐私计算-解读</h1>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="page-section" id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<blockquote> <p>读paper-"云环境下集合隐私计算"的笔记</p> </blockquote> <h2 id="基础">基础</h2> <h3 id="哥德尔编码">哥德尔编码</h3> <blockquote> <p>可以将非负整数序列（向量）与自然数建立起对应关系</p> </blockquote> <p>具体来说，就是无穷序列<span class="math inline">\((a_1,x_2,...,x_m)\)</span>借助素数序列<span class="math inline">\((p_1,p_2,...,p_m)\)</span>，建立对应关系：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/da670fb120b60c9c776d0cf96a02643c.jpg" alt="云环境下集合隐私计算-解读"></p> <p><span class="math inline">\([a_1,x_2,...,x_m]\)</span>称作有穷序列<span class="math inline">\((a_1,x_2,...,x_m)\)</span>的哥德尔数。</p> <h4 id="原理">原理</h4> <p>根据算数基本定理，任何自然数可以唯一分解为多个素数的乘积，而构成哥德尔数的素数序列<span class="math inline">\((p_1,p_2,...,p_m)\)</span>是已知的，因此，由<span class="math inline">\([a_1,x_2,...,x_m]\)</span>可以很容易得到序列<span class="math inline">\((a_1,x_2,...,x_m)\)</span>。</p> <h3 id="同态加密算法">同态加密算法</h3> <p>该方案只用到了加法或者乘法同态性，下面分别介绍两种同态加密算法：</p> <h4 id="elgamal">ElGamal</h4> <p>具有乘法同态性，相比于RSA，能抵抗重放攻击（加密时加入了随机数）<br /> 1、加密结构：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/dd8e99c43d8446548f36e0b6f621859f.jpg" alt="云环境下集合隐私计算-解读"><br /> 2、乘法计算：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d90624e12794ab20a33100bde05bad17.jpg" alt="云环境下集合隐私计算-解读"></p> <h4 id="paillier">Paillier</h4> <p>具有加法同态性和一次"乘法"同态性，主要用到的还是加法同态<br /> 1、加密结构<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/30f104f060dabec36b656d1641b16d4f.jpg" alt="云环境下集合隐私计算-解读"></p> <p>2、加法计算<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6c04131b9741e189033b9d4e94cc9741.jpg" alt="云环境下集合隐私计算-解读"></p> <h2 id="保密计算求集合并集方案">保密计算求集合并集方案</h2> <h3 id="原理-1">原理</h3> <h4 id="1-r编码">1-r编码</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/45eaccf7541a12308ab36ea668b6e3e8.jpg" alt="云环境下集合隐私计算-解读"><br /> 假设有<span class="math inline">\(n\)</span>个集合<span class="math inline">\(X_1,...,X_n\)</span>，将每个集合<span class="math inline">\(X_i\)</span>借助1-r编码方法编码成向量<span class="math inline">\(U_i\)</span>，然后将各个向量对应分量相乘后得到新的向量<span class="math inline">\(U'\)</span>：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6611e3b49782a879f067fa2a4010995d.jpg" alt="云环境下集合隐私计算-解读"></p> <p>如果向量<span class="math inline">\(U'\)</span>中的某个分量<span class="math inline">\(u_j'\neq 1\)</span>，说明这n个向量的第<span class="math inline">\(j\)</span>个分量不全为1，即n个集合中至少有一个集合含有元素<span class="math inline">\(u_j\)</span>，根据集合<span class="math inline">\(U;\)</span>中不为1的分量，可以得到并集<span class="math inline">\(X_1\cup X_2\cup ...\cup X_n\)</span>，所以求集合的并集问题可以规约到计算向量<span class="math inline">\(U'\)</span></p> <h4 id="举例">举例</h4> <p>下面给出三个集合<span class="math inline">\(X_1,X_2,X_3\in U\)</span>，保密的计算集合的并集：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7f28809bd02721ee6ac0e92e87d7e876.jpg" alt="云环境下集合隐私计算-解读"><br /> 最后$\sigma $为集合的并集。</p> <h3 id="具体方案1">具体方案1</h3> <blockquote> <p>在云计算下，数据是需要加密来保证安全的，这里选用ElGamal加密算法。假设有<span class="math inline">\(n\)</span>台服务器<span class="math inline">\(P_1,...,P_n\)</span>，每台服务器中有一个集合<span class="math inline">\(X_i\)</span>，假设第<span class="math inline">\(n\)</span>台服务器<span class="math inline">\(P_n\)</span>作为leader，生成加密的公私钥和参数，并将公钥和参数公开</p> </blockquote> <p>（1）云服务器<span class="math inline">\(P_n\)</span>将自己的公钥<span class="math inline">\(pk\)</span>与参数<span class="math inline">\(params\)</span>公开，并保留私钥<span class="math inline">\(sk\)</span><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1d8648941aa9da280a374f7b2e77e5da.jpg" alt="云环境下集合隐私计算-解读"></p> <p>（2）每个云服务器<span class="math inline">\(P_i(i=1,...,n)\)</span>计算：</p> <ul> <li> <p>将自己的秘密集合<span class="math inline">\(X_i\)</span>编码为向量<span class="math inline">\(U_i\)</span><br /> 将<span class="math inline">\(X_i\)</span>使用<strong>1-r编码</strong>方法编码为向量<span class="math inline">\(U_i=(u_{i,1},...,u_{i,m})\)</span></p> </li> <li> <p>将<span class="math inline">\(P_n\)</span>的公钥<span class="math inline">\(pk\)</span>与参数<span class="math inline">\(params\)</span>加密<span class="math inline">\(U_i\)</span>为<span class="math inline">\(E(U_i)\)</span><br /> 将向量<span class="math inline">\(U_i\)</span>中的每个分量分别加密，即<span class="math inline">\(E(U_i)=(E(u_{i,1}),...,E(u_{i,m}))\)</span></p> </li> <li> <p>将密文向量<span class="math inline">\(E(U_i)\)</span>随机分成<span class="math inline">\(k_i\)</span>份并发送给<span class="math inline">\(n\)</span>个云服务器中的<span class="math inline">\(k_i\)</span>个<br /> 为了将数据混淆来保证<span class="math inline">\(U_i\)</span>的安全，每台服务器需要将<span class="math inline">\(E(u_{i,j}),j=1,...,m\)</span>分为<span class="math inline">\(k_i(k_i \leqslant n)\)</span>份<span class="math inline">\(E(u_{i,j})_1,...,E(u_{i,j})_{k_i}\)</span>，（<span class="math inline">\(k_i\)</span>其他服务器是不知道的），需要满足:<span class="math inline">\(E(u_{i,j})_1...E(u_{i,j})_{k_i}=E(u_{i,j})\)</span><br /><span class="math inline">\(P_i\)</span>每次从每个密文分量<span class="math inline">\(E(u_{i,j})_1,...,E(u_{i,j})_{k_i}\)</span>中选取一个，共选取<span class="math inline">\(k_i\)</span>次，构成<span class="math inline">\(U_i\)</span>的<span class="math inline">\(k_i\)</span>份密文<span class="math inline">\(E(U_i)_1,...,E(U_i)_{k_i}\)</span>，每份（向量）里面<span class="math inline">\(m\)</span>个元素。<br /> 如果直接对<span class="math inline">\(E(u_{i,j}),j=1,...,m\)</span>进行分解因子，计算量大，所以这里使用<strong>模运算</strong>进行分解因子，具体如下：<br /> 选取<span class="math inline">\(k_i\)</span>个随机数<span class="math inline">\(r_{i,1},..,r_{i,k_i}\in Z_p^*\)</span>，需要满足<span class="math inline">\(r_{i,1}....r_{i,k_i}=1 mod p\)</span>，从<span class="math inline">\(k_i\)</span>个随机数中随机选择一个，如<span class="math inline">\(r_{i,1}\)</span>，和<span class="math inline">\(E(u_{i,j})\)</span>相乘，即<span class="math inline">\(E(u_{i,j})_1=E(u_{i,j}).r_{i,1}\)</span>，然后将<span class="math inline">\(E(u_{i,j})_2,...,E(u_{i,j})_{k_i}\)</span>用<span class="math inline">\(r_{i,2},...,r_{i,k_i}\)</span>表示，进而就能将<span class="math inline">\(E(U_i)\)</span><strong>"拆分"</strong>为<span class="math inline">\(k_i\)</span>份，且满足：<span class="math inline">\(E(u_{i,j})_1...E(u_{i,j})_{k_i}=r_{i,1}.E(u_{i,j}).r_{i,2}...r_{i,k_i}=E(u_i,j)\)</span><br /> 最后将这个<span class="math inline">\(k_i\)</span>个密文向量<span class="math inline">\(E(U_i)_1,...,E(U_i)_{k_i}\)</span>发送给k个云服务器（可以包括自己）。</p> </li> <li> <p>把收到的所有密文向量对应的分量相乘得到新的密文向量<span class="math inline">\(E(U_i')\)</span>，并发送给<span class="math inline">\(P_n\)</span><br /> 每个云服务器<span class="math inline">\(P_i\)</span>将密文发送后，也有可能收到其他云服务器发来的密文向量，<span class="math inline">\(P_i\)</span>将收到的密文向量的每个相应分量分别相乘，构成新的密文向量<span class="math inline">\(E(U_i^*)=(E(u_{i,1}'),...,E(u_{i,m}^*))\)</span>，并发送给leader云服务器<span class="math inline">\(P_n\)</span>，从而将发送的密文和自身密文混淆。<br /> （3）云服务器<span class="math inline">\(P_n\)</span>计算：</p> </li> <li> <p>所有收到的密文向量对应的分量相乘，得到<span class="math inline">\(E(U')\)</span><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8bf4316cd21fa2b7e95a176cc31b5e68.jpg" alt="云环境下集合隐私计算-解读"><br /> 由于每个服务器都是半诚实的，不会加入额外的信息，所以<span class="math inline">\(P_n\)</span>构造的密文向量<span class="math inline">\(E(U')\)</span>是所有参与者密文向量各个分量的乘积，即:<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cb5a938b0409ea00aeda2c0922d3d1b9.jpg" alt="云环境下集合隐私计算-解读"></p> </li> <li> <p>用自己的私钥<span class="math inline">\(sk\)</span>解密<span class="math inline">\(E(U')\)</span>得到<span class="math inline">\(U'\)</span></p> </li> </ul> <div class="math display">\[U'=(u_1',...,u_m')<br /> \]</div> <ul> <li>根据<span class="math inline">\(U'\)</span>中不为1的分量得到<span class="math inline">\((\sigma _1,...,\sigma _h)\)</span></li> <li>公布<span class="math inline">\((\sigma _1,...,\sigma _h)\)</span></li> </ul> <h3 id="举例-1">举例</h3> <blockquote> <p>现在要求四个云服务器中的秘密数据的并集，假设<span class="math inline">\(P_4\)</span>为leader服务器，<span class="math inline">\(k\)</span>=3</p> </blockquote> <p>（1）每台服务器<span class="math inline">\(P_i\)</span>编码各自的集合数据<span class="math inline">\(X_i\)</span>为<span class="math inline">\(U_i\)</span>；然后再使用公钥<span class="math inline">\(pk\)</span>加密，即<span class="math inline">\(E(U_1),E(U_2),E(U_3),E(U_4)\)</span>；再将其拆分为<span class="math inline">\(k\)</span>份，分别发送给其他两个服务器（自己留一份）<br /> （2）在发送完后，<span class="math inline">\(P_i\)</span>就有可能收到其他服务器发来的密文向量，然后将每份的密文向量对应的元素相乘得到<span class="math inline">\(E(U_i')\)</span>，发送给<span class="math inline">\(P_4\)</span><br /> （3）<span class="math inline">\(P_4\)</span>得到：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a0299956055c67c897e213853ac999ba.jpg" alt="云环境下集合隐私计算-解读"><br /> （4）<span class="math inline">\(P_4\)</span>将<span class="math inline">\(E(U')\)</span>解密，根据<span class="math inline">\(U'\)</span>中不为1的元素得到并集<span class="math inline">\((\sigma _1 ,...,\sigma _h )\)</span><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f97df0c8b769c538365366435669e787.jpg" alt="云环境下集合隐私计算-解读"></p> <h3 id="上云优化">上云优化</h3> <p>上面<span class="math inline">\(P_i\)</span>将向量<span class="math inline">\(U_i\)</span>加密，仅相当于加密1和随机数<span class="math inline">\(r \neq1\)</span>，E(1)和E(r)是公开的，只需要保密1和r所在的位置即可，因此可将加密运算外包给半可信的云服务器<span class="math inline">\(S\)</span>。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/221fbff6a8dd319cfb0efabf6c46f021.jpg" alt="云环境下集合隐私计算-解读"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b38fb86044ea345eb29f52af2cf6cf12.jpg" alt="云环境下集合隐私计算-解读"></p> <p>以上改造，半可信云服务器得到的信息只有<span class="math inline">\(E(1),r,E(U_i')\)</span>，并不影响安全性。每个用户<span class="math inline">\(P_i\)</span>仅需要计算少量的模乘，<span class="math inline">\(P_n\)</span>只需要做<span class="math inline">\(m\)</span>次解密，加密运算全部都由<span class="math inline">\(S\)</span>完成，大大降低用户的计算量。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b41ded466aa1f84b6ebede419211635d.jpg" alt="云环境下集合隐私计算-解读"></p> <h2 id="保密计算求集合并集优化方案">保密计算求集合并集优化方案</h2> <blockquote> <p>上面的方案计算复杂性和集合<span class="math inline">\(U\)</span>中元素的个数<span class="math inline">\(m\)</span>线性相关，若<span class="math inline">\(m\)</span>较大，加密、解密的次数和通信量将会较大，不便于计算。若想要<span class="math inline">\(m\)</span>不太大，可以在上面的基础上，利用哥德尔编码将向量对应成一个自然数的方法设计了一种高效的编码方法，使得协议的计算复杂性不再于集合的大小<span class="math inline">\(m\)</span>相关，降低了计算复杂性。</p> </blockquote> <h3 id="基本思想">基本思想</h3> <h4 id="0-r编码哥德尔编码">0-r编码+哥德尔编码</h4> <p>（1）总集合<span class="math inline">\(U=(u_1,...,u_m),(u_1&lt;....&lt;u_m)\)</span>对应集合<span class="math inline">\(P=(p_1,...,p_m),(p_1,...,p_m)\)</span>是不等的互素数<br /> （2）对于集合<span class="math inline">\(X_i\in U\)</span>，将其按照0-r编码方式编码为向量<span class="math inline">\(U_i=(u_{i,1},...,u_{i,m})\)</span>，具体是，若<span class="math inline">\(u_j\in X_i\)</span>，则<span class="math inline">\(u_{i,j}=r_{i,j}\)</span>，其中<span class="math inline">\(r_{i,j}\in [1,m]\)</span>是一个随机数且<span class="math inline">\(r_{i,j}\neq 0\)</span>，否则<span class="math inline">\(u_{i,j}=0\)</span>，然后借助集合<span class="math inline">\(P\)</span>利用哥德尔编码将<span class="math inline">\(U_i\)</span>编码为一个自然数<span class="math inline">\(x_i\)</span>，即：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f5f4880d2fc9f828d55921e9d863edf0.jpg" alt="云环境下集合隐私计算-解读"></p> <p>假设有<span class="math inline">\(n\)</span>个集合<span class="math inline">\(X_1,...,X_n \in U\)</span>，将每个集合<span class="math inline">\(X_i\)</span>按照上面的编码方式编码为一个自然数<span class="math inline">\(x_i\)</span>，将这<span class="math inline">\(n\)</span>个自然数相乘得到<span class="math inline">\(x\)</span>，即：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/efb90c58e787936cb8210bfaece854b9.jpg" alt="云环境下集合隐私计算-解读"><br /> 然后根据算数基本定理将<span class="math inline">\(x\)</span>展开，得到集合<span class="math inline">\(U'={u_1',...,u_m'}\)</span>。若<span class="math inline">\(u_j'=u_{1,j}+...+u_{n,j}\neq 0\)</span>，则说明<span class="math inline">\(n\)</span>个集合中至少有一个集合中有<span class="math inline">\(u_j\)</span>。所以就可以根据向量<span class="math inline">\(U'\)</span>中不为0的分量，得到并集。<br /> 故计算并集的问题可以规约到计算<span class="math inline">\(x\)</span>。</p> <h4 id="举例-2">举例</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/7dabd253b9913828c8ed4c534bd31f27.jpg" alt="云环境下集合隐私计算-解读"></p> <h3 id="具体方案2">具体方案2</h3> <blockquote> <p><span class="math inline">\(U\)</span>集合是公开的，或者是<span class="math inline">\(P_n\)</span>已知的；<span class="math inline">\(P_n\)</span>作为leader。</p> </blockquote> <p>输入：<span class="math inline">\(P_1,...,P_n\)</span>各自的秘密集合<span class="math inline">\(X_1,..,X_n \in U\)</span><br /> 输出：交集<span class="math inline">\((\sigma _1,...,\sigma _h)\)</span></p> <p>（1）云服务器<span class="math inline">\(P_n\)</span>保留私钥<span class="math inline">\(sk\)</span>，公布公钥<span class="math inline">\(pk\)</span>和系统参数<span class="math inline">\(params\)</span><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9e6772d735cdd404f30ac37f4edfb527.jpg" alt="云环境下集合隐私计算-解读"></p> <p>（2）每个云服务器<span class="math inline">\(P_i\)</span>计算如下：</p> <ul> <li> <p>根据上面改造的编码方法将自己的秘密集合<span class="math inline">\(X_i\)</span>编码为自然数<span class="math inline">\(x_i\)</span></p> </li> <li> <p>用公钥<span class="math inline">\(pk\)</span>加密<span class="math inline">\(x_i\)</span>为<span class="math inline">\(E(x_i)\)</span><br /> 直接发送<span class="math inline">\(E(x_i)\)</span>是不安全的，因为<span class="math inline">\(P_n\)</span>可以直接解密，所以需要混淆密文与云服务器的对应关系！</p> </li> <li> <p>将<span class="math inline">\(E(x_i)\)</span>随机分为<span class="math inline">\(k_i\)</span>份并发送给<span class="math inline">\(k_i\)</span>个服务器<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6ff8bfbad9c6e365e3fbc3fe1ec91319.jpg" alt="云环境下集合隐私计算-解读"></p> </li> <li> <p>将收到的所有密文相乘得到新的密文<span class="math inline">\(E(x_i')\)</span>，并发送给<span class="math inline">\(P_n\)</span><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ff91a4b69bff01aee876adc3bab77e08.jpg" alt="云环境下集合隐私计算-解读"></p> </li> </ul> <p>（3）云服务器<span class="math inline">\(P_n\)</span>计算如下：</p> <ul> <li>把所有收到的密文相乘，得到<span class="math inline">\(E(x)\)</span></li> <li>用私钥<span class="math inline">\(sk\)</span>解密<span class="math inline">\(E(x)\)</span>得到<span class="math inline">\(x\)</span></li> <li>将<span class="math inline">\(x\)</span>用算术基本定理展开得到向量<span class="math inline">\(U'\)</span></li> <li>根据<span class="math inline">\(U'\)</span>中不为0的分量得到集合<span class="math inline">\((\sigma _1,...,\sigma _h)\)</span><br /><img decoding="async" src="https://img2022.cnblogs.com/blog/1928790/202204/1928790-20220428112004549-848990374.png" alt="云环境下集合隐私计算-解读"></li> </ul> <h3 id="云计算下的改造方案">云计算下的改造方案</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/664d5e791c13411c1a6cbc18ed6f8c28.jpg" alt="云环境下集合隐私计算-解读"></p> <p>（1）用户自己编码，然后拆分混淆，发给服务器<br /> （2）服务器计算（混淆后的明文），再加密，发送给leader服务器<br /> （3）leader服务器计算（密文），解密，得到并集，并分发</p> <blockquote> <p>云服务器没有任何一个云用户秘密向量的全部信息，因此得到不到云用户的信息</p> </blockquote> <h3 id="方案分析">方案分析</h3> <p>安全性证明</p> <h2 id="保密计算求集合交集方案">保密计算求集合交集方案</h2> <blockquote> <p>上面介绍的是求集合的并集，现在求交集，变动不大！</p> </blockquote> <h3 id="协议">协议</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/24fd8b07a1dabd02864c0d3dab64d2c5.jpg" alt="云环境下集合隐私计算-解读"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3ec4168756d40e490c29c0dfe7577719.jpg" alt="云环境下集合隐私计算-解读"></p> <h3 id="举例-3">举例</h3> <p>（1）集合<span class="math inline">\(U=(101,102,103,104,105,106,107,108,109,110)\)</span>对应集合<span class="math inline">\(P=(2,3,5,7,11,13,17,19,23,31)\)</span>，假设要计算3个集合<span class="math inline">\(X_1=(101,105,107),X_2=(103,105,108),X_3=(105,106,109)\)</span>的交集，根据0-r编码将其编码为向量<span class="math inline">\(U_1,U_2,U_3\)</span>，即：</p> <div class="math display">\[U_1=(0,1,2,3,0,4,0,5,6,7),U_2=(1,2,0,4,0,5,6,0,7,8),U_3=(1,2,3,4,0,0,7,8,0,9)<br /> \]</div> <p>（2）将向量<span class="math inline">\(U_1,U_2,U_3\)</span>借助集合<span class="math inline">\(P\)</span>利用哥德尔编码编码为自然数<span class="math inline">\(x_1,x_2,x_3\)</span>，即：</p> <div class="math display">\[x_1=[0,1,2,3,0,4,0,5,6,7]=3^1.5^2.7^3.13^4.19^5.23^6.31^7;x_2=[1,2,0,4,0,5,6,0,7,8]=2^1.3^2.7^4.13^5.17^6.23^7.31^8;x_3=[1,2,3,4,0,0,7,8,0,9]=2^1.3^2.5^3.7^4.17^7.19^8.31^9<br /> \]</div> <p>（3）将这三个自然数相乘得到：</p> <div class="math display">\[x=x_1.x_2.x_3=2^2.3^5.5^5.7^{11}.11^0.13^9.17^{13}.19^{13}.21^{13}.31^{24}<br /> \]</div> <p>（4）即得到向量<span class="math inline">\(U'=(2,5,5,11,0,9,13,13,13,24)\)</span>，根据向量<span class="math inline">\(U'\)</span>中为0的分量得到交集：</p> <div class="math display">\[X_1 \cap X_2 \cap X_3=(105)<br /> \]</div> <blockquote> <p>以上为了方便演示，省去了拆分的步骤。</p> </blockquote> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-77221.htm">python 调用 C/C++ 详解</a></p>
                                        <p>下一个：<a href="/news/article-77904.htm">mysql从服务列表里消失</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-40685.htm" title="宠物粮从哪里进货便宜又好卖呢视频（宠物粮批发进货渠道）">宠物粮从哪里进货便宜又好卖呢视频（宠物粮批发进货渠道）</a></li>
                        <li class="py-2"><a href="/news/article-54940.htm" title="AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具">AsyncLocal&lt;T&gt;在链路追踪中的应用_在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-clash-stash.htm" title="「3月20日」最高速度18.2M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接">「3月20日」最高速度18.2M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-61197.htm" title="兰州哪里买宠物狗好点（兰州哪里有买狗狗的）">兰州哪里买宠物狗好点（兰州哪里有买狗狗的）</a></li>
                        <li class="py-2"><a href="/news/article-40687.htm" title="专科动物医学可以考公务员吗（专科有动物医学）">专科动物医学可以考公务员吗（专科有动物医学）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-5-node-share.htm" title="「2月5日」最高速度21.8M/S，2025年SSR/Clash/Shadowrocket/V2ray每天更新免费节点订阅链接">「2月5日」最高速度21.8M/S，2025年SSR/Clash/Shadowrocket/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-55496.htm" title="pytorch 保存模型和加载模型">pytorch 保存模型和加载模型</a></li>
                        <li class="py-2"><a href="/news/article-56612.htm" title="猫打疫苗要打几针多少钱一针（猫打疫苗大概多少钱一针）">猫打疫苗要打几针多少钱一针（猫打疫苗大概多少钱一针）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-16-clash-stash-node.htm" title="「3月16日」最高速度22M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接">「3月16日」最高速度22M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-60598.htm" title="Mac电脑配置maven，idea配置maven">Mac电脑配置maven，idea配置maven</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">66</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div> <!-- .container -->
    </div> <!-- .page-section -->
        <footer class="page-footer bg-image" style="background-image: url(/assets/website/img/clashstash/world_pattern.svg);">
        <div class="container">
            <p class="text-center" id="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <a href="/">ClashStash官方节点站</a> 版权所有
                <br />Powered by WordPress
            </p>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/clashstash/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashstash/bootstrap.bundle.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>