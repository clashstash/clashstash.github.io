<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashstash.github.io/news/article-98108.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>匿名类（Anonymous Classes）</title>
        <meta name="description" content="匿名类 匿名类可以让代码更加简洁，因为它允许声明的同时实例化一个类。类似于局部类，只不过他们没有名字，当只需要一次局部类时，用匿名类更简洁。  匿名类的声明 局部类的声明是类的声明，但匿名类的声明是一" />
        <link rel="icon" href="/assets/website/img/clashstash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashStash官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashstash.github.io/news/article-98108.htm" />
    <meta property="og:site_name" content="ClashStash官方节点站" />
    <meta property="og:title" content="匿名类（Anonymous Classes）" />
    <meta property="og:image" content="https://clashstash.github.io/uploads/20240709/e5e083b8aac6f1acfa0b09987b2fdbae.webp" />
        <meta property="og:release_date" content="2025-04-17T09:01:41" />
    <meta property="og:updated_time" content="2025-04-17T09:01:41" />
        <meta property="og:description" content="匿名类 匿名类可以让代码更加简洁，因为它允许声明的同时实例化一个类。类似于局部类，只不过他们没有名字，当只需要一次局部类时，用匿名类更简洁。  匿名类的声明 局部类的声明是类的声明，但匿名类的声明是一" />
        
    <link rel="stylesheet" href="/assets/website/css/clashstash/maicons.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/theme.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="匿名类（Anonymous Classes）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FGG26WJLQX"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FGG26WJLQX');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light bg-white sticky" data-offset="500">
            <div class="container">
                                <a href="/" class="navbar-brand">Clash<span class="text-primary">Stash</span></a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </div>
        </nav>
        <div class="container">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-6">
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                        <h1 class="text-center">匿名类（Anonymous Classes）</h1>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="page-section" id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h4> <a id="_0" rel="nofollow"></a>匿名类</h4> <p>匿名类可以让代码更加简洁，因为它允许声明的同时实例化一个类。类似于局部类，只不过他们没有名字，当只需要一次局部类时，用匿名类更简洁。</p> <h4> <a id="_2" rel="nofollow"></a>匿名类的声明</h4> <p>局部类的声明是类的声明，但匿名类的声明是一个表达式。下面的例子中，<code>frenchGreeting</code>和<code>spanishGreeting</code>的初始化使用了匿名类，而<code>englishGreeting</code>的初始化使用了局部类。</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorldAnonymousClasses</span> <span class="token punctuation">{<!-- --></span>        <span class="token keyword">interface</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greetSomeone</span><span class="token punctuation">(</span>String someone<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                  <span class="token keyword">class</span> <span class="token class-name">EnglishGreeting</span> <span class="token keyword">implements</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{<!-- --></span>             String name <span class="token operator">=</span> <span class="token string">"world"</span><span class="token punctuation">;</span>             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token function">greetSomeone</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greetSomeone</span><span class="token punctuation">(</span>String someone<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 name <span class="token operator">=</span> someone<span class="token punctuation">;</span>                 System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>                HelloWorld englishGreeting <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnglishGreeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  HelloWorld frenchGreeting <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             String name <span class="token operator">=</span> <span class="token string">"tout le monde"</span><span class="token punctuation">;</span>             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token function">greetSomeone</span><span class="token punctuation">(</span><span class="token string">"tout le monde"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greetSomeone</span><span class="token punctuation">(</span>String someone<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 name <span class="token operator">=</span> someone<span class="token punctuation">;</span>                 System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Salut "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>                  HelloWorld spanishGreeting <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             String name <span class="token operator">=</span> <span class="token string">"mundo"</span><span class="token punctuation">;</span>             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token function">greetSomeone</span><span class="token punctuation">(</span><span class="token string">"mundo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greetSomeone</span><span class="token punctuation">(</span>String someone<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 name <span class="token operator">=</span> someone<span class="token punctuation">;</span>                 System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hola, "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>         englishGreeting<span class="token punctuation">.</span><span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         frenchGreeting<span class="token punctuation">.</span><span class="token function">greetSomeone</span><span class="token punctuation">(</span><span class="token string">"Fred"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         spanishGreeting<span class="token punctuation">.</span><span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HelloWorldAnonymousClasses myApp <span class="token operator">=</span>             <span class="token keyword">new</span> <span class="token class-name">HelloWorldAnonymousClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         myApp<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>             <span class="token punctuation">}</span> </code></pre> <p>Syntax of Anonymous Classes</p> <h4> <a id="_62" rel="nofollow"></a>语法</h4> <p>As mentioned previously, an anonymous class is an expression. The syntax of an anonymous class expression is like the invocation of a constructor, except that there is a class definition contained in a block of code.<br /> 匿名类是一个表达式，它的语法类似于构造方法的调用，加上代码块中类的定义。</p> <pre><code class="prism language-java">HelloWorld frenchGreeting <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	  String name <span class="token operator">=</span> <span class="token string">"tout le monde"</span><span class="token punctuation">;</span> 	  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	      <span class="token function">greetSomeone</span><span class="token punctuation">(</span><span class="token string">"tout le monde"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	  <span class="token punctuation">}</span> 	  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">greetSomeone</span><span class="token punctuation">(</span>String someone<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	      name <span class="token operator">=</span> someone<span class="token punctuation">;</span> 	      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Salut "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span> 	  <span class="token punctuation">}</span> 	<span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre> <p>匿名类的定义包括：</p> <ul> <li>new 关键字</li> <li>匿名类要实现的接口名或是要继承的类名</li> <li>跟普通类的实例化一样，要传给构造方法的参数，用圆括号包起来。如果是接口，就没有构造方法，那么就跟一对空的圆括号。</li> <li>类的声明体，可以有方法声明，但不能有<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.oracle.com/javase/tutorial/java/nutsandbolts/expressions.html"  rel="nofollow">statement</a>，但是上面<code>String name = "tout le monde";</code>好像又是，此处有疑问</li> </ul> <h4> <a id="_83" rel="nofollow"></a>访问所在作用域的局部变量，声明和访问匿名类的成员</h4> <p>匿名类访问外部变量的规则（和局部类相同）：</p> <ul> <li>匿名类可以访问外部类的成员（成员变量和方法）</li> <li>对于局部变量，只有声明成<code>final</code>或<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.oracle.com/javase/tutorial/java/javaOO/localclasses.html#accessing-members-of-an-enclosing-class"  rel="nofollow">effectively final</a>时匿名类才能访问它</li> <li>和其他嵌套类一样，匿名类中定义的变量投影所在作用域的同名变量</li> </ul> <p>匿名类定义成员的规则（和局部类相同）：</p> <ul> <li>不能定义静态初始化块和成员接口</li> <li>可以有静态成员变量，只要它们是<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.oracle.com/javase/tutorial/java/javaOO/localclasses.html#local-classes-are-similar-to-inner-classes"  rel="nofollow">常量</a> </li> </ul> <p>能在匿名类中定义的有：</p> <ul> <li>字段（Fields）</li> <li>其他方法（即使不是父类中的）</li> <li>初始化代码块</li> <li>局部类</li> </ul> <p>不能在匿名类中定义构造方法。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-97373.htm">从线上环境摘取了四个代码优化记录分享给大家</a></p>
                                        <p>下一个：<a href="/news/article-98109.htm">Jackson忽略字段不序列化字段的3种方法</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-18-node-share-links.htm" title="「3月18日」最高速度21.5M/S，2025年Clash/SSR/V2ray/Shadowrocket每天更新免费节点订阅链接">「3月18日」最高速度21.5M/S，2025年Clash/SSR/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-88491.htm" title="开一个宠物食品加工厂需要什么（开宠物食品厂需要什么手续）">开一个宠物食品加工厂需要什么（开宠物食品厂需要什么手续）</a></li>
                        <li class="py-2"><a href="/news/article-67308.htm" title="宠物粮食品牌前十排名榜图片大全集（宠物粮食品牌前十排名榜图片大全集最新）">宠物粮食品牌前十排名榜图片大全集（宠物粮食品牌前十排名榜图片大全集最新）</a></li>
                        <li class="py-2"><a href="/news/article-77904.htm" title="mysql从服务列表里消失">mysql从服务列表里消失</a></li>
                        <li class="py-2"><a href="/news/article-95931.htm" title="猫咪疫苗打几针算接种完成（猫打疫苗到底是几针）">猫咪疫苗打几针算接种完成（猫打疫苗到底是几针）</a></li>
                        <li class="py-2"><a href="/news/article-97372.htm" title="Android jetpack room+ViewModel+liveData 数据自动更新">Android jetpack room+ViewModel+liveData 数据自动更新</a></li>
                        <li class="py-2"><a href="/news/article-71176.htm" title="穷养猫一个月最少花多少钱（怎样养猫家里才干净不臭）">穷养猫一个月最少花多少钱（怎样养猫家里才干净不臭）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-clash-stash.htm" title="「3月20日」最高速度18.2M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接">「3月20日」最高速度18.2M/S，2025年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-30-free-shadowrocket-node.htm" title="「3月30日」最高速度21.4M/S，2025年V2ray/Clash/Shadowrocket/SSR每天更新免费节点订阅链接">「3月30日」最高速度21.4M/S，2025年V2ray/Clash/Shadowrocket/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-6-free-subscribe-node.htm" title="「3月6日」最高速度21M/S，2025年Clash/Shadowrocket/SSR/V2ray每天更新免费节点订阅链接">「3月6日」最高速度21M/S，2025年Clash/Shadowrocket/SSR/V2ray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div> <!-- .container -->
    </div> <!-- .page-section -->
        <footer class="page-footer bg-image" style="background-image: url(/assets/website/img/clashstash/world_pattern.svg);">
        <div class="container">
            <p class="text-center" id="copyright">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <a href="/">ClashStash官方节点站</a> 版权所有
                <br />Powered by WordPress
            </p>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/clashstash/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashstash/bootstrap.bundle.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>