<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashstash.github.io/news/article-77221.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>python 调用 C/C++ 详解</title>
        <meta name="description" content="关于gcc以及python的版本配置建议大家去看我之前的一篇文章，里面比较详细地点明了关于32位和64的一些坑。 接下来将简单介绍python如何调用C和C++。包括调用整型，数组等情况。   C函数" />
        <link rel="icon" href="/assets/website/img/clashstash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashStash官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashstash.github.io/news/article-77221.htm" />
    <meta property="og:site_name" content="ClashStash官方节点站" />
    <meta property="og:title" content="python 调用 C/C++ 详解" />
    <meta property="og:image" content="https://clashstash.github.io/uploads/20240709/9a59164aa14fa2ff70e4ee3d5cf7db5d.webp" />
        <meta property="og:release_date" content="2025-03-19T09:11:28" />
    <meta property="og:updated_time" content="2025-03-19T09:11:28" />
        <meta property="og:description" content="关于gcc以及python的版本配置建议大家去看我之前的一篇文章，里面比较详细地点明了关于32位和64的一些坑。 接下来将简单介绍python如何调用C和C++。包括调用整型，数组等情况。   C函数" />
        
    <link rel="stylesheet" href="/assets/website/css/clashstash/maicons.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/clashstash/theme.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="python 调用 C/C++ 详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FGG26WJLQX"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FGG26WJLQX');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light bg-white sticky" data-offset="500">
            <div class="container">
                                <a href="/" class="navbar-brand">Clash<span class="text-primary">Stash</span></a>
                                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </div>
        </nav>
        <div class="container">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-6">
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                        <h1 class="text-center">python 调用 C/C++ 详解</h1>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="page-section" id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <p>关于gcc以及python的版本配置建议大家去看我之前的一篇文章，里面比较详细地点明了关于32位和64的一些坑。</p> <p>接下来将简单介绍python如何调用C和C++。包括调用整型，数组等情况。</p> </h1> <h4> <a id="Cint_5" rel="nofollow"></a>C函数返回整型int</h4> <p>c代码 test.c</p> <pre><code class="prism language-C">#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int func(int a, int b) { 	int ans = a + b; 	printf("You input %d and %d\n", a, b); 	printf("The result is %d\n", ans); 	return ans; } </code></pre> <p>编译成so包</p> <pre><code>gcc -o testpycll_64.so -shared -fPIC test.c </code></pre> <p>其中参数‘-fPIC’：当产生共享库的时候，应该创建位置无关的代码，这会让共享库使用任意的地址而不是固定的地址，要实现这个功能，需要使用-fPIC参数。</p> <p>python代码</p> <pre><code class="prism language-python"><span class="token keyword">import</span> ctypes <span class="token keyword">import</span> platform  ll <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>cdll<span class="token punctuation">.</span>LoadLibrary lib <span class="token operator">=</span> ll<span class="token punctuation">(</span><span class="token string">"./testpycll_64.so"</span><span class="token punctuation">)</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># platform.architecture()</span> </code></pre> <p>运行之后的结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221207/0cfeeadd082eb1825f3f031b981cc8c4.jpg" alt="python 调用 C/C++ 详解"><br /> 这里有一个问题，我是在jupyter notebook下的，只显示了C函数的返回值，对于过程打印语句并没有输出。但在命令行下是可以输出的，如下所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221207/c2574d6a882395ac050d65aa994bd4f1.jpg" alt="python 调用 C/C++ 详解"><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mypy.py"  rel="nofollow">mypy.py</a> 是python文件名。</p> <h4> <a id="C_int_41" rel="nofollow"></a>C函数返回整型数组 int[]</h4> <p>C代码：</p> <pre><code class="prism language-C">#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int* func(int a, int b) { 	int* res = (int *)malloc(3*sizeof(int)); 	int ans = a + b; 	printf("You input %d and %d\n", a, b); 	printf("The result is %d\n", ans);  	res[0] = a; 	res[1] = b; 	res[2] = ans; 	return res;  	//return ans; } </code></pre> <p><strong>python 代码：需要用到numpy包</strong><br /> （这里原先一直返回失败，也是试了非常多的方法才解决）</p> <pre><code class="prism language-python"><span class="token keyword">import</span> ctypes <span class="token keyword">import</span> platform <span class="token keyword">from</span> numpy<span class="token punctuation">.</span>ctypeslib <span class="token keyword">import</span> ndpointer  ll <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>cdll<span class="token punctuation">.</span>LoadLibrary lib <span class="token operator">=</span> ll<span class="token punctuation">(</span><span class="token string">"./testpycll_64.so"</span><span class="token punctuation">)</span>  lib<span class="token punctuation">.</span>func<span class="token punctuation">.</span>restype <span class="token operator">=</span> ndpointer<span class="token punctuation">(</span>dtype<span class="token operator">=</span>ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> res <span class="token operator">=</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> </code></pre> <p>运行之后的结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221207/d7d042cfa7aab090843504e5c5eef017.jpg" alt="python 调用 C/C++ 详解"></p> <h4> <a id="C_int_81" rel="nofollow"></a>C函数传入整型数组 int[]</h4> <p>C代码</p> <pre><code class="prism language-C">#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int func(int a[], int n) { 	int sum = 0; 	for(int i=0; i&lt;n; i++) 		sum += a[i]; 	 	return sum; } </code></pre> <p>python代码：<br /> 有多种写法，这里给出几种：<br /> （1）</p> <pre><code class="prism language-python">ll <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>cdll<span class="token punctuation">.</span>LoadLibrary lib <span class="token operator">=</span> ll<span class="token punctuation">(</span><span class="token string">"./testpycll_64.so"</span><span class="token punctuation">)</span>  INPUT <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>c_int <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment"># 实例化一个长度为2的整型数组</span> inputdata <span class="token operator">=</span> INPUT<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> inputdata<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> inputdata<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> inputdata<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> inputdata<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  lib<span class="token punctuation">.</span>func<span class="token punctuation">.</span>restype <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">;</span> res <span class="token operator">=</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">(</span>inputdata<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># res = lib.func2(1,2);</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> </code></pre> <p>（2）</p> <pre><code class="prism language-python">ll <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>cdll<span class="token punctuation">.</span>LoadLibrary lib <span class="token operator">=</span> ll<span class="token punctuation">(</span><span class="token string">"./testpycll_64.so"</span><span class="token punctuation">)</span>  pyarray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span> carray <span class="token operator">=</span> <span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_int <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pyarray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>pyarray<span class="token punctuation">)</span>  res <span class="token operator">=</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">(</span>carray<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pyarray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  </code></pre> <p>（3）搭配numpy数组</p> <pre><code class="prism language-python"><span class="token keyword">import</span> ctypes <span class="token keyword">import</span> platform <span class="token keyword">from</span> numpy<span class="token punctuation">.</span>ctypeslib <span class="token keyword">import</span> ndpointer <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  ll <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>cdll<span class="token punctuation">.</span>LoadLibrary<span class="token punctuation">;</span> lib <span class="token operator">=</span> ll<span class="token punctuation">(</span><span class="token string">"./testpycll_64.so"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   pyarray <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">"int32"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">.</span>argtypes <span class="token operator">=</span> <span class="token punctuation">[</span>ndpointer<span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">]</span><span class="token punctuation">;</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">.</span>restype <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">;</span> res <span class="token operator">=</span> lib<span class="token punctuation">.</span>func<span class="token punctuation">(</span>pyarray<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pyarray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># print (np.array(pyarray))</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> </code></pre> <p><strong>其余的数据类型就举一反三啦，ctypes下有很多数据类型，例如c_int, c_bool等，大家可以自己去尝试。</strong></p> </h1> <p>调用方法和C类似，只是需要加上</p> <pre><code class="prism language-C++">extern "C"  {     ... } </code></pre> <p>C++ 代码</p> <pre><code class="prism language-C++">#include &lt;iostream&gt; #include &lt;string&gt; using namespace std; class TestClass { public:     char* func(); };  char* TestClass::func()  {     cout &lt;&lt; "In func without argument" &lt;&lt; endl;     char* temp = "In func without argument";     return temp;     }   extern "C"  {     TestClass A;     char* myfunc1()      {         return A.func();      }  } </code></pre> <p>生成so包指令：注意变成g++</p> <pre><code>g++ -o testpycll_64.so -shared -fPIC test.cpp </code></pre> <p>python代码</p> <pre><code class="prism language-python"><span class="token keyword">import</span> ctypes <span class="token keyword">import</span> platform <span class="token keyword">from</span> numpy<span class="token punctuation">.</span>ctypeslib <span class="token keyword">import</span> ndpointer <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  ll <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>cdll<span class="token punctuation">.</span>LoadLibrary<span class="token punctuation">;</span> lib <span class="token operator">=</span> ll<span class="token punctuation">(</span><span class="token string">"./testpycll_64.so"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lib<span class="token punctuation">.</span>myfunc1<span class="token punctuation">.</span>restype <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>c_uint64<span class="token punctuation">;</span> res <span class="token operator">=</span> lib<span class="token punctuation">.</span>myfunc1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> res <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>string_at<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221207/d063a0485ecb61c54541be9a6e857c0c.jpg" alt="python 调用 C/C++ 详解"></p> <p>以上大致是python调用C/C++的方法，有不足之处还望大家指出。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-76541.htm">动物医院实践心得5000字怎么写的呀 动物医院实践心得5000字怎么写的呀作文</a></p>
                                        <p>下一个：<a href="/news/article-77222.htm">云环境下集合隐私计算-解读</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-39687.htm" title="动物疫苗价格排行榜前十名有哪些（动物疫苗价格排行榜前十名有哪些牌子）">动物疫苗价格排行榜前十名有哪些（动物疫苗价格排行榜前十名有哪些牌子）</a></li>
                        <li class="py-2"><a href="/news/article-38711.htm" title="央视推荐过的国产猫粮品牌排行榜（卫视猫粮）">央视推荐过的国产猫粮品牌排行榜（卫视猫粮）</a></li>
                        <li class="py-2"><a href="/news/article-51699.htm" title="220伏饲料颗粒机价格（220v饲料颗粒机）">220伏饲料颗粒机价格（220v饲料颗粒机）</a></li>
                        <li class="py-2"><a href="/news/article-59432.htm" title="springboot系类代码：spring-boot-starter-data-mongodb-reactive">springboot系类代码：spring-boot-starter-data-mongodb-reactive</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-21-free-clash-subscribe.htm" title="「1月21日」最高速度18.5M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费节点订阅链接">「1月21日」最高速度18.5M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-60023.htm" title="动物接种疫苗的目的和意义有哪些（动物接种疫苗的目的和意义有哪些要求）">动物接种疫苗的目的和意义有哪些（动物接种疫苗的目的和意义有哪些要求）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-clash-stash.htm" title="「3月11日」最高速度19.7M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接">「3月11日」最高速度19.7M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-67308.htm" title="宠物粮食品牌前十排名榜图片大全集（宠物粮食品牌前十排名榜图片大全集最新）">宠物粮食品牌前十排名榜图片大全集（宠物粮食品牌前十排名榜图片大全集最新）</a></li>
                        <li class="py-2"><a href="/news/article-74515.htm" title="JAVA生成指定位数不重复的随机数，随机数含0-9、A-Z">JAVA生成指定位数不重复的随机数，随机数含0-9、A-Z</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-20-clash-windows.htm" title="「1月20日」最高速度19.6M/S，2025年SSR/Clash/Shadowrocket/V2ray每天更新免费节点订阅链接">「1月20日」最高速度19.6M/S，2025年SSR/Clash/Shadowrocket/V2ray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div> <!-- .container -->
    </div> <!-- .page-section -->
        <footer class="page-footer bg-image" style="background-image: url(/assets/website/img/clashstash/world_pattern.svg);">
        <div class="container">
            <p class="text-center" id="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <a href="/">ClashStash官方节点站</a> 版权所有
                <br />Powered by WordPress
            </p>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/clashstash/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashstash/bootstrap.bundle.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>